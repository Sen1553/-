使用KNN算法完成电影种类判别

if __name__ == '__main__':的运行原理
每个python模块
都包含内置的变量 __name__，当该模块被直接执行的时候，__name__ 等于文件名（包含后缀 .py ）；
如果该模块 import 到其他模块中，则该模块的 __name__ 等于模块名称（不包含后缀.py）。
而 “__main__” 始终指当前执行模块的名称（包含后缀.py）。
进而当模块被直接执行时，__name__ == 'main' 结果为真。
只有当__name__ == 'main' 结果为真时才会执行if __name__ == '__main__':后的语句
if __name__ == '__main__':
    group, labels = createDataSet()
    print(group)
    print(labels)




np.tile()函数作用是将数组沿x轴，y轴复制
例
a=np.array([0,1,2])
括号内第一个参数为沿y轴复制，第二个沿x轴复制
np.tile(a,(2,1))-----沿y轴方向复制2遍，沿x轴方向复制一遍即不变
（[0,1,2]
   [0,1,2]）


当括号内为一个数时，默认沿x轴复制
np.tile(a,(2))
([0,1,2],[0,1,2])

字典名.items() 方法以列表返回可遍历的(键, 值) 元组数组----[(’爱情片‘，2),(‘动作片’，1)]
     [0][0]为最大频率的标签

 key=operator.itemgetter(1)根据字典的值进行排序
 key=operator.itemgetter(0)根据字典的键进行排序
 reverse降序排序字典

 for i in range(k)----从0开始输出直到k-1
  range(起始值，终止值，步长)

argsort会将distances中的数据从小到大排序，返回该数据对应的位次 数据从0开始
   
       例： [12 24 8 30]
           位置 0  1  2  3
         返回  [2 0 1 3] 升序排列
    
